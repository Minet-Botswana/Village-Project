apiVersion: apps/v1
kind: Deployment
metadata:
  name: kogae-deployed-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 120
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend-app
        image: us-central1-docker.pkg.dev/kogae-minet/kogae-repository/kogae_deployment_image:v1.0
        ports:
        - containerPort: 80
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: database
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL Auth Proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest
        args:
          # Enable structured logging with LogEntry format:
          - "--structured-logs"
          # Replace DB_PORT with the port the proxy should listen on
          - "--port=5432"
          - "kogae-minet:us-central1:production-minet"
        # [START cloud_sql_proxy_k8s_volume_mount]
          # This flag specifies where the service account key can be found
          - "--credentials-file=/secrets/service_account.json"
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - name: my-sa-secret-volume
          mountPath: /secrets/
          readOnly: true
          # [END cloud_sql_proxy_k8s_volume_mount]
        # Resource configuration depends on an application's requirements. You
        # should adjust the following values based on what your application
        # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            memory: "2Gi"
            cpu:    "1"
      # [START cloud_sql_proxy_k8s_volume_secret]
      volumes:
      - name: my-sa-secret-volume
        secret:
          secretName: sa-secret
      # [END cloud_sql_proxy_k8s_volume_secret]

---
apiVersion: v1
kind: Service
metadata:
  name: kogae-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: backend-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80