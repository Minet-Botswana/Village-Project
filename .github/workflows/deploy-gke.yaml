name: Deploy Development Backend

on:
  push:
    branches:
      - Production

env:
  PROJECT_ID: xenon-petal-407313
  PROJECT_NUMBER: 499085815913

  CLUSTER: kogae-cluster
  CLUSTER_ZONE: us-central1

  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1

  IMAGE: kogae_deployment_image

jobs:
  setup-and-deploy-job:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }}
        project_id: xenon-petal-407313

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: kogae-cluster
        location: us-central1
        credentials: ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "us-central1-docker.pkg.dev/xenon-petal-407313/clouddemo/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
      working-directory: ${{ github.workspace }}

    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        # Authenticate with Google Cloud (make sure your service account has necessary permissions)
        gcloud auth configure-docker us-central1-docker.pkg.dev

        # Push the Docker image to Artifact Registry
        docker push us-central1-docker.pkg.dev/xenon-petal-407313/clouddemo/kogae_deployment_image:$GITHUB_SHA

    # Deploy sample image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f path/to/deployment.yaml
        kubectl set image deployment/$DEPLOYMENT_NAME backend-app=gcr.io/$PROJECT_ID/$IMAGE:latest
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
