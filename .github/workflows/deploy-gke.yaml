name: Deploy Development Backend

on:
  push:
    branches:
      - Production

env:
  PROJECT_ID: xenon-petal-407313
  PROJECT_NUMBER: 499085815913
  DOCKER_PASSWORD: November@06
  DOCKER_USER: lebaneaustin2373
  CLUSTER: kogae-main-cluster
  CLUSTER_ZONE: europe-west1
  REPOSITORY: kogae-docker-repo
  REPOSITORY_REGION: europe-west1
  GCP_SA_KEY: ${{ secrets.New_SA_KEY }}
  IMAGE: kogae_deployment_image

jobs:
  setup-and-deploy-job:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.NEW_SA_KEY}}
        project_id: ko-gae-minet

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: kogae-main-cluster
        location: europe-west1
        credentials: ${{ secrets.NEW_SA_KEY }}

    # Build the Docker image
    - name: Build Docker image
      run: |-
        docker build \
          --tag "europe-west1-docker.pkg.dev/ko-gae-minet/kogae-docker-repo/kogae_deployment_image:v1.0" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    
    # Push the Docker image to Google Artifact Registry
    - name: Publish Docker image to Google Artifact Registry
      run: |-
        echo "$GCR_KEY" > gcr-key.json
        gcloud auth activate-service-account --key-file=gcr-key.json
        gcloud auth configure-docker europe-west1-docker.pkg.dev
        docker push europe-west1-docker.pkg.dev/ko-gae-minet/kogae-docker-repo/kogae_deployment_image:v1.0
      env:
        GCR_KEY: ${{ secrets.NEW_SA_KEY }}


    # Deploy sample image to the GKE cluster
    - name: Deploy image to GKE cluster
      run: |-
        kubectl apply -f deployment.yaml
        kubectl set image deployment/kogae-deployed-app backend-app=europe-west1-docker.pkg.dev/ko-gae-minet/kogae-docker-repo/kogae_deployment_image:v1.0
        kubectl rollout status deployment/kogae-deployed-app
        kubectl get services -o wide

