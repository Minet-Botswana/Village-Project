name: Deploy Development Backend

on:
  push:
    branches:
      - Production

env:
  PROJECT_ID: xenon-petal-407313
  PROJECT_NUMBER: 499085815913

  CLUSTER: kogae-cluster
  CLUSTER_ZONE: us-central1

  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1

  IMAGE: kogae_deployment_image

jobs:
  setup-and-deploy-job:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }}
        project_id: xenon-petal-407313

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: kogae-cluster
        location: us-central1
        credentials: ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:latest"

    - name: Lock image version in deployment.yaml
      run: sed -i 's|CLOUDDEMO_IMAGE|${{ env.IMAGE_TAG }}|g' applications/clouddemo/netcore/deployment.yaml

    - name: Build Docker image
      run: docker build --tag "${{ env.IMAGE_TAG }}" -f applications/clouddemo/netcore/Dockerfile applications/clouddemo/netcore

    - name: Publish Docker image to Google Artifact Registry
      run: docker push "${{ env.IMAGE_TAG }}"

    #
    # Deploy to GKE
    #
    - name: Deploy to GKE
      run: kubectl apply -f applications/clouddemo/netcore/deployment.yaml
    
